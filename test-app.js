const { execSync } = require('child_process');

console.log('üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...\n');

try {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ
  console.log('üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤...');
  const fs = require('fs');
  
  const criticalFiles = [
    'src/App.tsx',
    'src/index.tsx',
    'src/components/App/App.tsx',
    'src/components/LeftPanel/LeftPanel.tsx',
    'src/components/RightPanel/RightPanel.tsx',
    'package.json',
    'tsconfig.json'
  ];
  
  let allFilesExist = true;
  criticalFiles.forEach(file => {
    if (fs.existsSync(file)) {
      console.log(`‚úÖ ${file}`);
    } else {
      console.log(`‚ùå ${file} - –ù–ï –ù–ê–ô–î–ï–ù`);
      allFilesExist = false;
    }
  });
  
  if (!allFilesExist) {
    console.log('\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!');
    process.exit(1);
  }
  
  console.log('\n‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json
  console.log('\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...');
  const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
  
  const requiredDeps = ['react', 'react-dom', 'react-hot-toast'];
  const requiredDevDeps = ['typescript', '@types/react', '@types/react-dom', 'tailwindcss'];
  
  requiredDeps.forEach(dep => {
    if (packageJson.dependencies[dep]) {
      console.log(`‚úÖ ${dep}: ${packageJson.dependencies[dep]}`);
    } else {
      console.log(`‚ùå ${dep} - –ù–ï –ù–ê–ô–î–ï–ù –≤ dependencies`);
    }
  });
  
  requiredDevDeps.forEach(dep => {
    if (packageJson.devDependencies[dep]) {
      console.log(`‚úÖ ${dep}: ${packageJson.devDependencies[dep]}`);
    } else {
      console.log(`‚ùå ${dep} - –ù–ï –ù–ê–ô–î–ï–ù –≤ devDependencies`);
    }
  });
  
  console.log('\nüéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É!');
  console.log('\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:');
  console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ http://localhost:3000');
  console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
  console.log('3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:');
  console.log('   - –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–Ω–∏–ø–ø–µ—Ç–æ–≤');
  console.log('   - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö');
  console.log('   - Drag & Drop –º–µ–∂–¥—É –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏');
  console.log('   - –ü–æ–∏—Å–∫ –ø–æ —Å–Ω–∏–ø–ø–µ—Ç–∞–º');
  console.log('   - –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π');
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:', error.message);
  process.exit(1);
}
